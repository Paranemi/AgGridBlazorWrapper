@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorAgGridTest.Data
@using Newtonsoft.Json
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <h2>AG Grid</h2>
    <AgGrid Data="@Peoples" 
            Height="800px"
            Width="60%"
            Pageable="true"
            PageSize="20">

            <GridColumn Field="@nameof(PeopleModel.Age)" Title="Alter" Sortable="true" Resizable="false" Editable="false" GridCellFormatter="@GridCellFormatter.DecimalsFormatter"></GridColumn> 
            <GridColumn Field="@nameof(PeopleModel.Name)" Title="Name" Sortable="true" Resizable="true" Editable="true"></GridColumn> 
            <GridColumn Field="@nameof(PeopleModel.Email)" Title="Email" Sortable="true" Resizable="true" Editable="true"></GridColumn> 
            <GridColumn Field="@nameof(PeopleModel.Address)" Title="Adresse" Sortable="true" Resizable="true" Editable="true"></GridColumn> 
            <GridColumn Field="@nameof(PeopleModel.Registered)" Title="Registrierdatum" Sortable="false" Resizable="true" Editable="true" GridCellFormatter="@GridCellFormatter.DateFormatter"></GridColumn> 
    </AgGrid>
}

@code {
    private WeatherForecast[]? forecasts;
    public List<PeopleModel>? Peoples { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var json = File.ReadAllText("Data/PeopleData.txt");
        Peoples = JsonConvert.DeserializeObject<List<PeopleModel>>(json);
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
